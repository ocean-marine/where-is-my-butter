name: Claude Code

on:
  issues:
    types: [opened, edited, labeled]
  pull_request:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  claude-code-action:
    if: |
      (
        github.event_name == 'issue_comment' &&
        contains(github.event.comment.body, '@claude') &&
        github.event.comment.user.login == 'Taichi-Ibi'
      ) ||
      (
        github.event_name == 'pull_request_review_comment' &&
        contains(github.event.comment.body, '@claude') &&
        github.event.comment.user.login == 'Taichi-Ibi'
      ) ||
      (
        github.event_name == 'pull_request_review' &&
        contains(github.event.review.body, '@claude') &&
        github.event.review.user.login == 'Taichi-Ibi'
      ) ||
      (
        github.event_name == 'issues' &&
        (
          (contains(github.event.issue.body, '@claude') && github.event.issue.user.login == 'Taichi-Ibi') ||
          (github.event.action == 'labeled' && github.event.label.name == 'claude' && github.event.sender.login == 'Taichi-Ibi')
        )
      ) ||
      (
        github.event_name == 'pull_request' &&
        (
          (contains(github.event.pull_request.body, '@claude') && github.event.pull_request.user.login == 'Taichi-Ibi') ||
          (github.event.action == 'labeled' && github.event.label.name == 'claude' && github.event.sender.login == 'Taichi-Ibi')
        )
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          claude_args: |
            --allowedTools "Bash(bun install),Bash(bun test:*),Bash(bun run format),Bash(bun typecheck)"
            --model "claude-haiku-4-5"

